// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------
// AUTHENTICATION
// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  profile  Profile?
  posts    Post[]
  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  userId Int

  user User @relation(fields: [userId], references: [id])
}

// --------------------------------------
// POSTS
// --------------------------------------

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  authorId  Int
  title     String
  published Boolean  @default(false)

  author     User       @relation(fields: [authorId], references: [id])
  categories Category[] @relation(references: [id])
  tags       Tag[]      @relation(references: [id])
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  posts Post[] @relation(references: [id])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  posts Post[] @relation(references: [id])
}
